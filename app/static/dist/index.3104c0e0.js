(window.webpackJsonp=window.webpackJsonp||[]).push([["index","about"],{1:function(a,e,n){"use strict";n.r(e);n(7),n(8),n(2)},2:function(a,e,n){},22:function(a,e,n){"use strict";n.r(e);n(1);var t=n(4),l=n.n(t);new(n(3).default)({el:"#app",data:function(){return{samples:[["Example 1 (JSON)","plan_1.json","plan_1.sql"],["Example 1 (plain text)","plan_1.txt","plan_1.sql"],["Example 2","plan_2.json","plan_2.sql"],["Example 3","plan_3.json","plan_3.sql"],["Example 4","plan_4.json"],["Example 5","plan_5.json","plan_5.sql"],["With subplan","plan_6.txt"],["With CTE","plan_7.txt"],["Very large plan","plan_8.json"],["With trigger","plan_trigger.json","plan_trigger.sql"],["With trigger (plain text)","plan_trigger.txt","plan_trigger_2.sql"],["Parallel (verbose)","plan_parallel.json"],["Parallel (4 workers)","plan_parallel2.txt","plan_parallel2.sql"]],planInput:"",queryInput:"",draggingPlan:!1,draggingQuery:!1}},mounted(){const a=document.getElementsByTagName("textarea");Array.prototype.forEach.call(a,a=>{a.placeholder=a.placeholder.replace(/\\n/g,"\n")})},methods:{submitPlan(){planData[0]=this.planInput,planData[1]=this.queryInput,router.push({path:"plan"})},loadSample(a){l.a.get(staticUrl+"samples/"+a[1]).then(a=>{this.planInput=a.request.responseText}),a[2]?l.a.get(staticUrl+"samples/"+a[2]).then(a=>{this.queryInput=a.request.responseText}):this.queryInput=""},handleDrop(a){const e=a.srcElement;if(!(e instanceof HTMLTextAreaElement))return;if(this.draggingPlan=!1,this.draggingQuery=!1,!a.dataTransfer)return;const n=a.dataTransfer.files[0],t=new FileReader;t.onload=a=>{t.result instanceof ArrayBuffer||(e.value=t.result||"",e.dispatchEvent(new Event("input")))},t.readAsText(n)}}})}},[[22,"runtime","vendors~about~index~plan","vendors~index~plan"]]]);